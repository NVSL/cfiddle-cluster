version: "3.7"

services:
  mysql-srv: # the -srv is to distinguish between the service name and the hostname.  See https://stackoverflow.com/a/76966725/3949036
    image: mysql:5.7
    hostname: mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: slurm_acct_db
      MYSQL_USER: slurm
      MYSQL_PASSWORD: password
    volumes:
      - var_lib_mysql:/var/lib/mysql
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.slurm_role==head_node"

  slurmdbd-srv:
    image: cfiddle-cluster:latest
    build:
      context: .
    command: ["slurmdbd"]
    hostname: slurmdbd
    volumes:
      - etc_munge:/etc/munge
      - var_log_slurm:/var/log/slurm
    depends_on:
      - mysql-srv
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.slurm_role==head_node"

  slurmctld-srv:
    image: cfiddle-cluster:latest
    command: ["slurmctld"]
    hostname: slurmctld
    volumes:
      - etc_munge:/etc/munge
      - slurm_jobdir:/data
      - var_log_slurm:/var/log/slurm
    depends_on:
      - slurmdbd-srv
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.slurm_role==head_node"

  userhost-srv:
    build:
      context: .
      dockerfile: ./user.Dockerfile
    image: cfiddle-user:latest
    environment:
      DELEGATE_FUNCTION_DEBUG_ENABLED: "yes"
      DOCKER_STACKS_JUPYTER_CMD: "notebook"
    hostname: userhost
    command: ["start-notebook.sh", "--NotebookApp.token='slurmify'" ]
    user: root
    init: true 
    ports:
      - "8888:8888"
    volumes:
      - home_nfs:/home
      - etc_munge:/etc/munge
    depends_on:
      - slurmctld-srv
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.slurm_role==head_node"

  c1-srv: &worker
    image: cfiddle-cluster:latest
    command: ["slurmd"]
    environment:
        DELEGATE_FUNCTION_DEBUG_ENABLED: "yes"
    hostname: c1
    volumes:
      - etc_munge:/etc/munge
      - var_log_slurm:/var/log/slurm
      - home_nfs:/home
      - cfiddle_scratch:/cfiddle_scratch
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    cap_add:
      - ALL
    depends_on:
      - slurmctld-srv
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.slurm_role==worker"

  c2-srv: &c2
    <<: *worker
    hostname: c2

  sandbox-dummy: # this is just here to build the image.  It'll get spawned by the worker node.
    image: cfiddle-sandbox:latest
    build:
      context: .
      dockerfile: ./sandbox.Dockerfile
    deploy:
      replicas: 0
      
#  c3: &c3
#    <<: *worker
#    hostname: c3##

#  c4: &c4
#    <<: *worker
#    hostname: c4

#  c6: &c6
#    <<: *worker
#    hostname: c6

#  c5: &c5
#    <<: *worker
#    hostname: c5

volumes:
  etc_munge:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${HEAD_ADDR},nolock,soft,ro
      device: :/etc/munge
  etc_slurm:
  slurm_jobdir:
  cfiddle_scratch:
  var_lib_mysql:
  var_log_slurm:
  home_nfs:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${HEAD_ADDR},nolock,soft,rw
      device: :/home
    
#mount nfs-server:/users_home /tmp/mnt  -o nolock
